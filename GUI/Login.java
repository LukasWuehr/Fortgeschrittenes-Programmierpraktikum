package GUI;

import javax.swing.*;
import javax.swing.plaf.DimensionUIResource;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Login {
    private JPanel LoginPanel;
    private JTextField nameField;
    private JPasswordField passwordField;
    private JButton loginButton;
    private JButton exitButton;
    private JButton newPlayerButton;
    private JLabel headline;
    private JLabel passwordLable;
    private JLabel nameLable;
    private JLabel messageLable;

    private String[] inputs = new String[3];

    public Login(JFrame frame) {
        inputs[0] = "0";
        //JFrame frame = new JFrame("Login");
        frame.setTitle("Login");
        frame.setContentPane(LoginPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setSize(500, 500);
        frame.setVisible(true);
        //frame.setExtendedState(Frame.MAXIMIZED_BOTH);
        exitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                System.exit(0);
            }
        });
        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                String pwd = String.valueOf(passwordField.getPassword());
                String name = nameField.getText();
                inputs[0] = "2";
                inputs[1] = name;
                inputs[2] = pwd;
            }
        });
        newPlayerButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                String pwd = String.valueOf(passwordField.getPassword());
                String name = nameField.getText();
                inputs[0] = "1";
                inputs[1] = name;
                inputs[2] = pwd;
            }
        });

        messageLable.setText("");
    }

    public String[] getInputs() {
        return inputs;
    }

    public void setMessage(String message) {
        messageLable.setText(message);
    }

    public static void main(String[] args) {
        new Login(new JFrame());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        LoginPanel = new JPanel();
        LoginPanel.setLayout(new GridBagLayout());
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        LoginPanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.VERTICAL;
        LoginPanel.add(spacer2, gbc);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setEnabled(false);
        Font panel1Font = this.$$$getFont$$$("Dyuthi", -1, 22, panel1.getFont());
        if (panel1Font != null) panel1.setFont(panel1Font);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.BOTH;
        LoginPanel.add(panel1, gbc);
        nameField = new JTextField();
        Font nameFieldFont = this.$$$getFont$$$("Dyuthi", -1, 22, nameField.getFont());
        if (nameFieldFont != null) nameField.setFont(nameFieldFont);
        nameField.setText("");
        panel1.add(nameField, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        passwordField = new JPasswordField();
        Font passwordFieldFont = this.$$$getFont$$$("Dyuthi", -1, 22, passwordField.getFont());
        if (passwordFieldFont != null) passwordField.setFont(passwordFieldFont);
        passwordField.setText("");
        panel1.add(passwordField, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        nameLable = new JLabel();
        Font nameLableFont = this.$$$getFont$$$("Dyuthi", -1, 22, nameLable.getFont());
        if (nameLableFont != null) nameLable.setFont(nameLableFont);
        nameLable.setText("Name:");
        panel1.add(nameLable, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passwordLable = new JLabel();
        Font passwordLableFont = this.$$$getFont$$$("Dyuthi", -1, 22, passwordLable.getFont());
        if (passwordLableFont != null) passwordLable.setFont(passwordLableFont);
        passwordLable.setText("Password:");
        panel1.add(passwordLable, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.BOTH;
        LoginPanel.add(panel2, gbc);
        newPlayerButton = new JButton();
        newPlayerButton.setText("New Player");
        panel2.add(newPlayerButton);
        loginButton = new JButton();
        loginButton.setText("Login");
        panel2.add(loginButton);
        exitButton = new JButton();
        exitButton.setText("Exit");
        panel2.add(exitButton);
        headline = new JLabel();
        Font headlineFont = this.$$$getFont$$$("Dyuthi", Font.BOLD, 28, headline.getFont());
        if (headlineFont != null) headline.setFont(headlineFont);
        headline.setForeground(new Color(-10461088));
        headline.setText("LOGIN");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.NORTH;
        LoginPanel.add(headline, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        LoginPanel.add(spacer3, gbc);
        messageLable = new JLabel();
        Font messageLableFont = this.$$$getFont$$$(null, -1, 20, messageLable.getFont());
        if (messageLableFont != null) messageLable.setFont(messageLableFont);
        messageLable.setForeground(new Color(-3395282));
        messageLable.setText("Message");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        LoginPanel.add(messageLable, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return LoginPanel;
    }

}
