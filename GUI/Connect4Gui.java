package GUI;

import games.Player;
import games.connect4.Disc;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Connect4Gui {
    private JLabel playersLabel;
    private JLabel turnLable;
    private JButton exitButton;
    private JPanel connect4Panel;
    private JPanel connect4BoardPanel;
    private Disc[][] discs;
    private Player player1, player2;
    private int startPlayer;

    public Connect4Gui(Disc[][] discs) {
        this.discs = discs;
        connect4BoardPanel.setLayout(new GridLayout(discs[0].length + 1, discs.length));
        for (int i = 0; i < discs[0].length; i++) {
            new JButton("V").addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent actionEvent) {
                    // setDisc(i);
                }
            });
        }
        for (int i = 0; discs[0].length > i; i++) { // links oben 0,0
            for (Disc[] value : discs) {
                Disc disc = value[i];
                connect4BoardPanel.add(disc.getButton());

            }
        }
    }

    public Connect4Gui(Player player1, Player player2, int length, int height,int startPlayer, MainScreen mainScreen) {
        setPlayers(player1,player2);


    }

    public JPanel getPanel() {
        return connect4Panel;
    }

    public void setPlayers(Player player1, Player player2) {
        this.player1 = player1;
        this.player2 = player2;
        playersLabel.setText(player1.getPlayerName() + " vs " + player2.getPlayerName());
    }

    public void setTurnLable(int turn) {
        if (turn % 2 == 0) {
            turnLable.setText("Turn of " + player1.getPlayerName());
        } else {
            turnLable.setText("Turn of " + player2.getPlayerName());
        }
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        connect4Panel = new JPanel();
        connect4Panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        playersLabel = new JLabel();
        Font playersLabelFont = this.$$$getFont$$$("JetBrains Mono", -1, -1, playersLabel.getFont());
        if (playersLabelFont != null) playersLabel.setFont(playersLabelFont);
        playersLabel.setText("Player1 vs PLayer2");
        connect4Panel.add(playersLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        turnLable = new JLabel();
        Font turnLableFont = this.$$$getFont$$$("JetBrains Mono", -1, -1, turnLable.getFont());
        if (turnLableFont != null) turnLable.setFont(turnLableFont);
        turnLable.setText("Turn");
        connect4Panel.add(turnLable, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        exitButton = new JButton();
        Font exitButtonFont = this.$$$getFont$$$("JetBrains Mono", -1, -1, exitButton.getFont());
        if (exitButtonFont != null) exitButton.setFont(exitButtonFont);
        exitButton.setText("Exit");
        connect4Panel.add(exitButton, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        connect4Panel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        connect4BoardPanel = new JPanel();
        connect4BoardPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        connect4Panel.add(connect4BoardPanel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return connect4Panel;
    }

}
